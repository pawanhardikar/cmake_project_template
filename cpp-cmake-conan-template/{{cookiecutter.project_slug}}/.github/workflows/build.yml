name: Build, Test, and Analyze with CMake + Conan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ python3-pip ninja-build wget unzip
          pip install conan

      - name: Download SonarQube CLI tools
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-*.zip
          echo "$PWD/sonar-scanner-*/bin" >> $GITHUB_PATH

          wget https://binaries.sonarsource.com/Distribution/sonar-build-wrapper/sonar-build-wrapper-linux-x86.zip
          unzip sonar-build-wrapper-*.zip

      - name: Conan Install
        run: |
          mkdir build
          conan install . --output-folder=build --build=missing

      - name: Configure & Build (with build-wrapper)
        run: |
          ./sonar-build-wrapper*/build-wrapper-linux-x86/build-wrapper-linux-x86-64 \
            --out-dir bw-output \
            cmake -S . -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake && \
            cmake --build build

      - name: Run Tests
        run: cd build && ctest --output-on-failure

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectBaseDir=. \
            -Dsonar.login=$SONAR_TOKEN
